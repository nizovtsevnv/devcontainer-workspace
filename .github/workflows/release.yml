name: Create Release

on:
  push:
    tags:
      - 'v*.*.*'

permissions:
  contents: write

jobs:
  release:
    runs-on: ubuntu-latest
    steps:
      - name: Checkout code
        uses: actions/checkout@v4
        with:
          fetch-depth: 0

      - name: Get previous tag
        id: previoustag
        run: |
          # –ü–æ–ª—É—á–∏—Ç—å –ø—Ä–µ–¥—ã–¥—É—â–∏–π —Ç–µ–≥
          PREV_TAG=$(git tag --sort=-version:refname | grep -E '^v[0-9]+\.[0-9]+\.[0-9]+$' | sed -n '2p')
          if [ -z "$PREV_TAG" ]; then
            # –ï—Å–ª–∏ —ç—Ç–æ –ø–µ—Ä–≤—ã–π —Ç–µ–≥, –∏—Å–ø–æ–ª—å–∑–æ–≤–∞—Ç—å –ø–µ—Ä–≤—ã–π –∫–æ–º–º–∏—Ç
            PREV_TAG=$(git rev-list --max-parents=0 HEAD)
          fi
          echo "tag=$PREV_TAG" >> $GITHUB_OUTPUT
          echo "Previous tag: $PREV_TAG"

      - name: Generate changelog
        id: changelog
        run: |
          CURRENT_TAG=${GITHUB_REF#refs/tags/}
          PREV_TAG="${{ steps.previoustag.outputs.tag }}"

          echo "Generating changelog from $PREV_TAG to $CURRENT_TAG"

          # –ü–æ–ª—É—á–∏—Ç—å –≤—Å–µ –∫–æ–º–º–∏—Ç—ã –º–µ–∂–¥—É —Ç–µ–≥–∞–º–∏
          COMMITS=$(git log --pretty=format:"%s|%b" "$PREV_TAG..$CURRENT_TAG")

          # –ò–Ω–∏—Ü–∏–∞–ª–∏–∑–∞—Ü–∏—è —Å–µ–∫—Ü–∏–π
          FEATURES=""
          FIXES=""
          CHORES=""
          BREAKING=""

          # –ü–∞—Ä—Å–∏–Ω–≥ –∫–æ–º–º–∏—Ç–æ–≤
          while IFS='|' read -r subject body; do
            # –ü—Ä–æ–≤–µ—Ä–∫–∞ –Ω–∞ BREAKING CHANGE
            if echo "$body" | grep -q "BREAKING CHANGE:"; then
              BREAKING_MSG=$(echo "$body" | grep "BREAKING CHANGE:" | sed 's/BREAKING CHANGE: //')
              BREAKING="${BREAKING}- ${subject}\n  ${BREAKING_MSG}\n"
            fi

            # –ì—Ä—É–ø–ø–∏—Ä–æ–≤–∫–∞ –ø–æ —Ç–∏–ø–∞–º
            case "$subject" in
              feat:*|feat\(*)
                FEATURES="${FEATURES}- ${subject#feat: }\n"
                FEATURES="${FEATURES}- ${subject#feat\(}\n"
                ;;
              fix:*|fix\(*)
                FIXES="${FIXES}- ${subject#fix: }\n"
                FIXES="${FIXES}- ${subject#fix\(}\n"
                ;;
              chore:*|chore\(*|refactor:*|refactor\(*|docs:*|docs\(*|style:*|style\(*|test:*|test\(*)
                CHORES="${CHORES}- ${subject}\n"
                ;;
              *)
                CHORES="${CHORES}- ${subject}\n"
                ;;
            esac
          done <<< "$COMMITS"

          # –§–æ—Ä–º–∏—Ä–æ–≤–∞–Ω–∏–µ changelog
          CHANGELOG="## üéØ –û—Å–Ω–æ–≤–Ω—ã–µ –∏–∑–º–µ–Ω–µ–Ω–∏—è\n\n"

          if [ -n "$BREAKING" ]; then
            CHANGELOG="${CHANGELOG}### ‚ö†Ô∏è Breaking Changes\n\n${BREAKING}\n"
          fi

          if [ -n "$FEATURES" ]; then
            CHANGELOG="${CHANGELOG}### ‚ú® –ù–æ–≤—ã–µ –≤–æ–∑–º–æ–∂–Ω–æ—Å—Ç–∏\n\n${FEATURES}\n"
          fi

          if [ -n "$FIXES" ]; then
            CHANGELOG="${CHANGELOG}### üêõ –ò—Å–ø—Ä–∞–≤–ª–µ–Ω–∏—è\n\n${FIXES}\n"
          fi

          if [ -n "$CHORES" ]; then
            CHANGELOG="${CHANGELOG}### üîß –¢–µ—Ö–Ω–∏—á–µ—Å–∫–æ–µ\n\n${CHORES}\n"
          fi

          # –î–æ–±–∞–≤–∏—Ç—å —Å—Å—ã–ª–∫–∏ –Ω–∞ –¥–æ–∫—É–º–µ–Ω—Ç–∞—Ü–∏—é
          CHANGELOG="${CHANGELOG}## üìö –î–æ–∫—É–º–µ–Ω—Ç–∞—Ü–∏—è\n\n"
          CHANGELOG="${CHANGELOG}- [–°–∏—Å—Ç–µ–º–∞ –∞–≤—Ç–æ–º–∞—Ç–∏–∑–∞—Ü–∏–∏ Makefile](https://github.com/${{ github.repository }}/blob/main/doc/devenv/makefile.md)\n"
          CHANGELOG="${CHANGELOG}- [–†—É–∫–æ–≤–æ–¥—Å—Ç–≤–æ –ø–æ DevContainer](https://github.com/${{ github.repository }}/blob/main/doc/devenv/devcontainer.md)\n"
          CHANGELOG="${CHANGELOG}- [–§–∞–π–ª–æ–≤–∞—è —Å—Ç—Ä—É–∫—Ç—É—Ä–∞](https://github.com/${{ github.repository }}/blob/main/doc/devenv/file-tree.md)\n"

          # –°–æ—Ö—Ä–∞–Ω–∏—Ç—å –≤ —Ñ–∞–π–ª
          echo -e "$CHANGELOG" > changelog.md
          cat changelog.md

      - name: Create Release
        uses: softprops/action-gh-release@v1
        with:
          body_path: changelog.md
          draft: false
          prerelease: false
        env:
          GITHUB_TOKEN: ${{ secrets.GITHUB_TOKEN }}
